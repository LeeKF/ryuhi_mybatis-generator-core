<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.qiboot.NewConsumerProject.order.dao.mapper.UserEntityMapper">
  <resultMap id="BaseResultMap" type="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="mall_id" jdbcType="BIGINT" property="mallId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="regtime" jdbcType="TIMESTAMP" property="regtime" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="apply_type" jdbcType="TINYINT" property="applyType" />
    <result column="register_type" jdbcType="TINYINT" property="registerType" />
    <result column="pay_password" jdbcType="CHAR" property="payPassword" />
    <result column="salt" jdbcType="CHAR" property="salt" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="register_ip" jdbcType="VARCHAR" property="registerIp" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  AND ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  AND ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  AND ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  AND ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  AND ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  AND ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  AND ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  AND ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mall_id, name, nickname, password, mobile, status, regtime, avatar, is_delete, 
    email, gender, apply_type, register_type, pay_password, salt, memo, register_ip, 
    gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntityExample" resultMap="BaseResultMap">
    SELECT
    <if test="DISTINCT">
      DISTINCT
    </if>
    <include refid="Base_Column_List" />
    FROM user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      ORDER BY ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List" />
    FROM user
    WHERE id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    DELETE FROM user
    WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntityExample">
    DELETE FROM user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntity">
    INSERT IGNORE INTO user (id, mall_id, name, 
      nickname, password, mobile, 
      status, regtime, avatar, 
      is_delete, email, gender, 
      apply_type, register_type, pay_password, 
      salt, memo, register_ip, 
      gmt_create, gmt_modified)
    VALUES (#{id,jdbcType=BIGINT}, #{mallId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{regtime,jdbcType=TIMESTAMP}, #{avatar,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=TINYINT}, #{email,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{applyType,jdbcType=TINYINT}, #{registerType,jdbcType=TINYINT}, #{payPassword,jdbcType=CHAR}, 
      #{salt,jdbcType=CHAR}, #{memo,jdbcType=VARCHAR}, #{registerIp,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntity">
    INSERT IGNORE INTO user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mallId != null">
        mall_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="regtime != null">
        regtime,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="applyType != null">
        apply_type,
      </if>
      <if test="registerType != null">
        register_type,
      </if>
      <if test="payPassword != null">
        pay_password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mallId != null">
        #{mallId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="regtime != null">
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=TINYINT},
      </if>
      <if test="registerType != null">
        #{registerType,jdbcType=TINYINT},
      </if>
      <if test="payPassword != null">
        #{payPassword,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=CHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntityExample" resultType="java.lang.Long">
    SELECT COUNT(*) FROM user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    UPDATE user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mallId != null">
        mall_id = #{record.mallId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.regtime != null">
        regtime = #{record.regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.applyType != null">
        apply_type = #{record.applyType,jdbcType=TINYINT},
      </if>
      <if test="record.registerType != null">
        register_type = #{record.registerType,jdbcType=TINYINT},
      </if>
      <if test="record.payPassword != null">
        pay_password = #{record.payPassword,jdbcType=CHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=CHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.registerIp != null">
        register_ip = #{record.registerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    UPDATE user
    SET id = #{record.id,jdbcType=BIGINT},
      mall_id = #{record.mallId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      regtime = #{record.regtime,jdbcType=TIMESTAMP},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      apply_type = #{record.applyType,jdbcType=TINYINT},
      register_type = #{record.registerType,jdbcType=TINYINT},
      pay_password = #{record.payPassword,jdbcType=CHAR},
      salt = #{record.salt,jdbcType=CHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      register_ip = #{record.registerIp,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntity">
    UPDATE user
    <set>
      <if test="mallId != null">
        mall_id = #{mallId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="regtime != null">
        regtime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="applyType != null">
        apply_type = #{applyType,jdbcType=TINYINT},
      </if>
      <if test="registerType != null">
        register_type = #{registerType,jdbcType=TINYINT},
      </if>
      <if test="payPassword != null">
        pay_password = #{payPassword,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qiboot.NewConsumerProject.order.dao.model.UserEntity">
    UPDATE user
    SET mall_id = #{mallId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      regtime = #{regtime,jdbcType=TIMESTAMP},
      avatar = #{avatar,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      apply_type = #{applyType,jdbcType=TINYINT},
      register_type = #{registerType,jdbcType=TINYINT},
      pay_password = #{payPassword,jdbcType=CHAR},
      salt = #{salt,jdbcType=CHAR},
      memo = #{memo,jdbcType=VARCHAR},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
</mapper>